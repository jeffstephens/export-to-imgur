// Generated by CoffeeScript 1.7.1
(function() {
  var MessageManager, expect;

  expect = require('chai').expect;

  MessageManager = require('../js/MessageManager.js');

  describe('MessageManager', function() {
    var mm;
    mm = null;
    beforeEach(function() {
      return mm = new MessageManager();
    });
    it('should initially contain an empty array', function() {
      return expect(mm.messageList).to.be.empty;
    });
    it('should fail to add a message when no parameters are passed', function() {
      var attempt;
      attempt = mm.addMessage();
      expect(attempt).to.be["false"];
      return expect(mm.messageList).to.be.empty;
    });
    it('should successfuly add a message when three parameters are passed', function() {
      var attempt;
      attempt = mm.addMessage("info", "title", "some text");
      expect(attempt).to.be["true"];
      return expect(mm.messageList).to.not.be.empty;
    });
    return describe('Adding two messages, then retrieving them', function() {
      beforeEach(function() {
        mm.addMessage("info", "first", "first message");
        return mm.addMessage("info", "second", "second message");
      });
      afterEach(function() {
        return mm.messageList = [];
      });
      it('should return two messages in getMessages() after two messages are added', function() {
        expect(mm.messageList.length).to.equal(2);
        return expect(mm.getMessages().length).to.equal(2);
      });
      return it('should return one message in getMessages() when one message is too old', function() {
        mm.messageList[0].time = 0;
        expect(mm.messageList.length).to.equal(2);
        expect(mm.getMessages().length).to.equal(1);
        return expect(mm.messageList[0].title).to.equal("second");
      });
    });
  });

}).call(this);
