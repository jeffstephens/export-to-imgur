// Generated by CoffeeScript 1.7.1
(function() {
  var JobItem, JobManager, expect;

  expect = require('chai').expect;

  JobManager = require('../js/JobManager.js');

  JobItem = require('../js/JobItem.js');

  describe('JobManager', function() {
    var jiOne, jiThree, jiTwo, jm;
    jm = jiOne = jiTwo = jiThree = null;
    beforeEach(function() {
      jm = new JobManager();
      jiOne = new JobItem(["http://www.example.com/"]);
      jiTwo = new JobItem(["http://www.google.com/"]);
      return jiThree = new JobItem(["http://www.yahoo.com/"]);
    });
    it('should initially have an empty queue', function() {
      return expect(jm.jobQueue).to.be.empty;
    });
    it('should be able to add an item to the queue', function() {
      jm.addItem(jiOne);
      expect(jm.jobQueue.length).to.equal(1);
      jm.addItem(jiTwo);
      jm.addItem(jiThree);
      return expect(jm.jobQueue.length).to.equal(3);
    });
    it('should not add an item identical to an existing one to the queue', function() {
      jm.addItem(jiOne);
      jm.addItem(jiTwo);
      jm.addItem(jiOne);
      return expect(jm.jobQueue.length).to.equal(2);
    });
    it('should be able to pop an item off the queue in FIFO fashion', function() {
      var nextItem;
      jm.addItem(jiOne);
      jm.addItem(jiTwo);
      jm.addItem(jiThree);
      nextItem = jm.getNext();
      expect(jm.jobQueue.length).to.equal(2);
      return expect(nextItem).to.equal(jiOne);
    });
    return it('should return null when popping an item off an empty queue', function() {
      var nextItem;
      nextItem = jm.getNext();
      return expect(nextItem).to.be["null"];
    });
  });

}).call(this);
