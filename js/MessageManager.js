// Generated by CoffeeScript 1.7.1
(function() {
  var MessageManager, UserMessage,
    __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; };

  UserMessage = require('./UserMessage.js');

  MessageManager = (function() {
    function MessageManager() {
      this.getMessages = __bind(this.getMessages, this);
      this.pruneMessages = __bind(this.pruneMessages, this);
      this.addMessage = __bind(this.addMessage, this);
      this.messageList = [];
    }

    MessageManager.prototype.addMessage = function(level, title, text) {
      var newMessage;
      if ((level != null) && (title != null) && (text != null)) {
        newMessage = new UserMessage();
        newMessage.setLevel(level);
        newMessage.setTitle(title);
        newMessage.setText(text);
        this.messageList.push(newMessage);
        return true;
      } else {
        return false;
      }
    };

    MessageManager.prototype.pruneMessages = function() {
      var MESSAGE_LIFETIME, NOW, deleteTargets, i, index, _i, _j, _len, _ref, _results;
      MESSAGE_LIFETIME = 15 * 1000;
      NOW = Date.now();
      deleteTargets = [];
      for (i = _i = _ref = this.messageList.length - 1; _ref <= 0 ? _i <= 0 : _i >= 0; i = _ref <= 0 ? ++_i : --_i) {
        if (NOW - this.messageList[i].time > MESSAGE_LIFETIME) {
          deleteTargets.push(i);
        }
      }
      _results = [];
      for (_j = 0, _len = deleteTargets.length; _j < _len; _j++) {
        index = deleteTargets[_j];
        _results.push(this.messageList.splice(index, 1));
      }
      return _results;
    };

    MessageManager.prototype.getMessages = function() {
      this.pruneMessages();
      return this.messageList;
    };

    return MessageManager;

  })();

  module.exports = MessageManager;

}).call(this);
